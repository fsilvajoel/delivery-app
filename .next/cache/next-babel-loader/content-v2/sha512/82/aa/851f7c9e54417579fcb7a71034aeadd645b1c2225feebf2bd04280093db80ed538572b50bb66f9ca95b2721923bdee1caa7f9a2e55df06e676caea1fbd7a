{"ast":null,"code":"import _defineProperty from \"D:/personal_projects/delivery-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"D:/personal_projects/delivery-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\personal_projects\\\\delivery-app\\\\src\\\\components\\\\Menu\\\\components\\\\Logo\\\\Logo.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable import-helpers/order-imports */\nimport scss from './Logo.module.scss';\n\nfunction Logo(_ref) {\n  var alt = _ref.alt,\n      image = _ref.image,\n      isDrawer = _ref.isDrawer,\n      props = _objectWithoutProperties(_ref, [\"alt\", \"image\", \"isDrawer\"]);\n\n  var containerClass = [scss.container];\n  if (isDrawer) containerClass.push(scss.drawer);\n  if (props.className) containerClass.push(props.className);\n  return /*#__PURE__*/_jsxDEV(\"a\", _objectSpread(_objectSpread({}, props), {}, {\n    href: props.to,\n    className: containerClass.join(' '),\n    children: /*#__PURE__*/_jsxDEV(\"figure\", {\n      className: scss.figure,\n      children: [image, /*#__PURE__*/_jsxDEV(\"figcaption\", {\n        className: scss.figcaption,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Logo;\nexport default Logo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logo\");","map":{"version":3,"sources":["D:/personal_projects/delivery-app/src/components/Menu/components/Logo/Logo.tsx"],"names":["scss","Logo","alt","image","isDrawer","props","containerClass","container","push","drawer","className","to","join","figure","figcaption"],"mappings":";;;;;;;;;AAAA;AAGA,OAAOA,IAAP,MAAiB,oBAAjB;;AAEA,SAASC,IAAT,OAA8D;AAAA,MAA9CC,GAA8C,QAA9CA,GAA8C;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,MAArBC,KAAqB;;AAC5D,MAAMC,cAAc,GAAG,CAACN,IAAI,CAACO,SAAN,CAAvB;AAEA,MAAIH,QAAJ,EAAcE,cAAc,CAACE,IAAf,CAAoBR,IAAI,CAACS,MAAzB;AACd,MAAIJ,KAAK,CAACK,SAAV,EAAqBJ,cAAc,CAACE,IAAf,CAAoBH,KAAK,CAACK,SAA1B;AAErB,sBACE,6CAAOL,KAAP;AAAc,IAAA,IAAI,EAAEA,KAAK,CAACM,EAA1B;AAA8B,IAAA,SAAS,EAAEL,cAAc,CAACM,IAAf,CAAoB,GAApB,CAAzC;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAEZ,IAAI,CAACa,MAAxB;AAAA,iBACGV,KADH,eAEE;AAAY,QAAA,SAAS,EAAEH,IAAI,CAACc,UAA5B;AAAA,+BACE;AAAA,oBAAOZ;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAhBQD,I;AAkBT,eAAeA,IAAf","sourcesContent":["/* eslint-disable import-helpers/order-imports */\nimport { ILogoProps } from './types';\n\nimport scss from './Logo.module.scss';\n\nfunction Logo({ alt, image, isDrawer, ...props }: ILogoProps) {\n  const containerClass = [scss.container];\n\n  if (isDrawer) containerClass.push(scss.drawer);\n  if (props.className) containerClass.push(props.className);\n\n  return (\n    <a {...props} href={props.to} className={containerClass.join(' ')}>\n      <figure className={scss.figure}>\n        {image}\n        <figcaption className={scss.figcaption}>\n          <span>{alt}</span>\n        </figcaption>\n      </figure>\n    </a>\n  );\n}\n\nexport default Logo;\n"]},"metadata":{},"sourceType":"module"}