{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\personal_projects\\\\delivery-app\\\\src\\\\components\\\\Menu\\\\Menu.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable import-helpers/order-imports */\n\n/* eslint-disable import/no-extraneous-dependencies */\n\n/* eslint-disable react-hooks/rules-of-hooks */\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Drawer } from 'antd';\nimport isEmpty from 'lodash.isempty';\nimport { useState, useLayoutEffect, useEffect } from 'react';\nimport { gtmButtonClass } from '~constants/gtmButtonClass';\nimport { EBreakpoints } from '~enums/breakpoints';\nimport { EPlacement } from '~enums/placement';\nimport { useElementScroll } from '~hooks/useScroll';\nimport { useWindowWidthChange } from '~hooks/useWindowChange';\nimport { isBoolean } from '~utils/isBoolean';\nimport DrawerToggler from './components/DrawerToggler';\nimport Logo from './components/Logo';\nimport { MenuContext } from './context-types';\nimport scss from './Menu.module.scss';\nvar MIN_SCROLL = 0;\n\nvar isSameScrollContext = function isSameScrollContext(windowScroll, isScrolled) {\n  var scrollToReturn = null;\n  if (windowScroll > MIN_SCROLL) scrollToReturn = !isScrolled;\n  if (windowScroll === MIN_SCROLL) scrollToReturn = isScrolled;\n  return scrollToReturn;\n};\n\nvar isReactElement = function isReactElement(obj) {\n  return obj.$$typeof;\n};\n\nvar shouldRender = function shouldRender(item, context) {\n  var _item$contextRenderer;\n\n  return !item.contextRenderer || ((_item$contextRenderer = item.contextRenderer) === null || _item$contextRenderer === void 0 ? void 0 : _item$contextRenderer.canRender(context));\n};\n\nfunction Menu(props) {\n  _s();\n\n  var _this = this;\n\n  var contentLeftClass = [scss.contentLeft];\n  var contentRightClass = [scss.contentRight];\n  var containerClass = [scss.container];\n  var itemLinkClass = [scss.itemLink, gtmButtonClass];\n  var menuItemClass = [scss.menuItem, props.menuItemClassName];\n\n  var _useState = useState(false),\n      isDesktop = _useState[0],\n      setIsDesktop = _useState[1];\n\n  var _useState2 = useState(false),\n      showDrawer = _useState2[0],\n      setShowDrawer = _useState2[1];\n\n  var _useState3 = useState(false),\n      isScrolled = _useState3[0],\n      setIsScrolled = _useState3[1];\n\n  var toggleDrawer = function toggleDrawer(status) {\n    return function () {\n      return setShowDrawer(status);\n    };\n  };\n\n  var renderMenuItem = function renderMenuItem(item, context) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: menuItemClass.join(' '),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: item.to,\n        target: item.target,\n        onClick: toggleDrawer(false),\n        className: itemLinkClass.join(' '),\n        \"data-gtm-event-label\": item.label,\n        \"data-gtm-event-action\": \"clique-menu\",\n        \"data-gtm-event-category\": props.eventCategory,\n        children: /*#__PURE__*/_jsxDEV(item.component, {\n          label: item.label,\n          context: context\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, _this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var renderItems = function renderItems(items, breakpoint) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: scss.itemList,\n      children: items.map(function (item, index) {\n        var context = {\n          isScrolled: isScrolled,\n          breakpoint: breakpoint\n        };\n        var element = null;\n\n        if (!isReactElement(item) && shouldRender(item, context)) {\n          element = renderMenuItem(item, context);\n        }\n\n        if (isReactElement(item)) {\n          element = /*#__PURE__*/_jsxDEV(\"li\", {\n            className: menuItemClass.join(' '),\n            children: item\n          }, item.props.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, _this);\n        }\n\n        return element;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var renderLeftContent = function renderLeftContent(breakpoint) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: contentLeftClass.join(' '),\n      children: renderItems(props.itemsLeft, breakpoint)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var renderCenterContent = function renderCenterContent(breakpoint) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: scss.contentCenter,\n      children: renderItems(props.itemsCenter, breakpoint)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var renderRightContent = function renderRightContent(breakpoint) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: contentRightClass.join(' '),\n      children: renderItems(props.itemsRight, breakpoint)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var renderDrawerContent = function renderDrawerContent(breakpoint) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: scss.drawerContent,\n      children: renderItems(props.itemsDrawer, breakpoint)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var renderMobileMenu = function renderMobileMenu() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: scss.mobile,\n        children: [(!isEmpty(props.itemsLeft) || !isEmpty(props.itemsCenter)) && renderLeftContent('mobile'), !isEmpty(props.itemsCenter) && renderCenterContent('mobile'), (!isEmpty(props.itemsRight) || !isEmpty(props.itemsCenter)) && renderRightContent('mobile')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Drawer, {\n        placement: props.drawerPlacement,\n        closable: props.drawerClosable,\n        visible: showDrawer,\n        bodyStyle: {\n          padding: 0\n        },\n        className: props.drawerClassName,\n        onClose: toggleDrawer(false),\n        children: renderDrawerContent('mobile')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var renderDesktopMenu = function renderDesktopMenu() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: scss.desktop,\n      children: [(!isEmpty(props.itemsLeft) || !isEmpty(props.itemsCenter)) && renderLeftContent('desktop'), !isEmpty(props.itemsCenter) && renderCenterContent('desktop'), (!isEmpty(props.itemsRight) || !isEmpty(props.itemsCenter)) && renderRightContent('desktop')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, _this);\n  };\n\n  useLayoutEffect(function () {\n    setIsDesktop(window.innerWidth >= (props.desktopBreakpoint || EBreakpoints.from1024));\n  }, []);\n  useWindowWidthChange(function () {\n    setIsDesktop(window.innerWidth >= (props.desktopBreakpoint || EBreakpoints.from1024));\n  });\n\n  if (true) {\n    useElementScroll(window, function (scrollY) {\n      if (!isBoolean(props.isScrolled) && isSameScrollContext(scrollY, isScrolled)) {\n        setIsScrolled(!!scrollY);\n      }\n    });\n  }\n\n  useEffect(function () {\n    var breakpoint = isDesktop ? 'desktop' : 'mobile';\n    if (props.onChangeContext) props.onChangeContext({\n      breakpoint: breakpoint,\n      isScrolled: isScrolled\n    });\n  }, [isScrolled, isDesktop]);\n  useEffect(function () {\n    if (isBoolean(props.isScrolled)) {\n      setIsScrolled(props.isScrolled && true);\n    }\n  }, [props.isScrolled]);\n  if (isDesktop) containerClass.push(scss.containerDesktop);\n  if (props.className) containerClass.push(props.className);\n\n  if (!isEmpty(props.itemsCenter) || isEmpty(props.itemsLeft) || isEmpty(props.itemsRight)) {\n    contentLeftClass.push(scss.full);\n    contentRightClass.push(scss.full);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MenuContext.Provider, {\n    value: [showDrawer, setShowDrawer],\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: containerClass.join(' '),\n      children: isDesktop ? renderDesktopMenu() : renderMobileMenu()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Menu, \"S2ET0NhWLSeq7ekjv5O0CMdn+vQ=\", false, function () {\n  return [useWindowWidthChange, useElementScroll];\n});\n\n_c = Menu;\nMenu.defaultProps = {\n  itemsCenter: [],\n  itemsRight: [],\n  itemsLeft: [],\n  itemsDrawer: [],\n  eventCategory: '',\n  drawerPlacement: EPlacement.LEFT,\n  drawerClosable: false\n};\nexport { Logo, DrawerToggler };\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["D:/personal_projects/delivery-app/src/components/Menu/Menu.tsx"],"names":["Drawer","isEmpty","useState","useLayoutEffect","useEffect","gtmButtonClass","EBreakpoints","EPlacement","useElementScroll","useWindowWidthChange","isBoolean","DrawerToggler","Logo","MenuContext","scss","MIN_SCROLL","isSameScrollContext","windowScroll","isScrolled","scrollToReturn","isReactElement","obj","$$typeof","shouldRender","item","context","contextRenderer","canRender","Menu","props","contentLeftClass","contentLeft","contentRightClass","contentRight","containerClass","container","itemLinkClass","itemLink","menuItemClass","menuItem","menuItemClassName","isDesktop","setIsDesktop","showDrawer","setShowDrawer","setIsScrolled","toggleDrawer","status","renderMenuItem","join","to","target","label","eventCategory","id","renderItems","items","breakpoint","itemList","map","index","element","renderLeftContent","itemsLeft","renderCenterContent","contentCenter","itemsCenter","renderRightContent","itemsRight","renderDrawerContent","drawerContent","itemsDrawer","renderMobileMenu","mobile","drawerPlacement","drawerClosable","padding","drawerClassName","renderDesktopMenu","desktop","window","innerWidth","desktopBreakpoint","from1024","scrollY","onChangeContext","push","containerDesktop","className","full","defaultProps","LEFT"],"mappings":"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","sourcesContent":["/* eslint-disable import-helpers/order-imports */\n/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react-hooks/rules-of-hooks */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Drawer } from 'antd';\nimport isEmpty from 'lodash.isempty';\nimport { useState, useLayoutEffect, useEffect } from 'react';\nimport { MenuItem, MenuProps } from '~components/Menu/types';\nimport { gtmButtonClass } from '~constants/gtmButtonClass';\nimport { EBreakpoints } from '~enums/breakpoints';\nimport { EPlacement } from '~enums/placement';\nimport { useElementScroll } from '~hooks/useScroll';\nimport { useWindowWidthChange } from '~hooks/useWindowChange';\nimport { isBoolean } from '~utils/isBoolean';\n\nimport DrawerToggler from './components/DrawerToggler';\nimport Logo from './components/Logo';\nimport { IContext, MenuContext } from './context-types';\nimport scss from './Menu.module.scss';\n\nconst MIN_SCROLL = 0;\n\nconst isSameScrollContext = (windowScroll: any, isScrolled: any) => {\n  let scrollToReturn = null;\n  if (windowScroll > MIN_SCROLL) scrollToReturn = !isScrolled;\n  if (windowScroll === MIN_SCROLL) scrollToReturn = isScrolled;\n\n  return scrollToReturn;\n};\n\nconst isReactElement = (obj: any): obj is JSX.Element => obj.$$typeof;\n\nconst shouldRender = (item: MenuItem, context: IContext): item is MenuItem =>\n  !item.contextRenderer || item.contextRenderer?.canRender(context);\n\nfunction Menu(props: MenuProps) {\n  const contentLeftClass = [scss.contentLeft];\n  const contentRightClass = [scss.contentRight];\n  const containerClass = [scss.container];\n  const itemLinkClass = [scss.itemLink, gtmButtonClass];\n  const menuItemClass = [scss.menuItem, props.menuItemClassName];\n\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [showDrawer, setShowDrawer] = useState(false);\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  const toggleDrawer = (status: boolean) => () => setShowDrawer(status);\n\n  const renderMenuItem = (item: MenuItem, context: IContext) => (\n    <li className={menuItemClass.join(' ')} key={item.id}>\n      <a\n        href={item.to}\n        target={item.target}\n        onClick={toggleDrawer(false)}\n        className={itemLinkClass.join(' ')}\n        data-gtm-event-label={item.label}\n        data-gtm-event-action=\"clique-menu\"\n        data-gtm-event-category={props.eventCategory}\n      >\n        <item.component label={item.label} context={context} />\n      </a>\n    </li>\n  );\n\n  const renderItems = (\n    items: (MenuItem | JSX.Element)[],\n    breakpoint: IContext['breakpoint']\n  ) => (\n    <ul className={scss.itemList}>\n      {items.map((item, index) => {\n        const context = { isScrolled, breakpoint };\n        let element = null;\n\n        if (!isReactElement(item) && shouldRender(item, context)) {\n          element = renderMenuItem(item, context);\n        }\n\n        if (isReactElement(item)) {\n          element = (\n            <li key={item!.props!.id} className={menuItemClass.join(' ')}>\n              {item}\n            </li>\n          );\n        }\n\n        return element;\n      })}\n    </ul>\n  );\n\n  const renderLeftContent = (breakpoint: IContext['breakpoint']) => (\n    <div className={contentLeftClass.join(' ')}>\n      {renderItems(props.itemsLeft, breakpoint)}\n    </div>\n  );\n\n  const renderCenterContent = (breakpoint: IContext['breakpoint']) => (\n    <div className={scss.contentCenter}>\n      {renderItems(props.itemsCenter, breakpoint)}\n    </div>\n  );\n\n  const renderRightContent = (breakpoint: IContext['breakpoint']) => (\n    <div className={contentRightClass.join(' ')}>\n      {renderItems(props.itemsRight, breakpoint)}\n    </div>\n  );\n\n  const renderDrawerContent = (breakpoint: IContext['breakpoint']) => (\n    <div className={scss.drawerContent}>\n      {renderItems(props.itemsDrawer, breakpoint)}\n    </div>\n  );\n\n  const renderMobileMenu = () => (\n    <>\n      <div className={scss.mobile}>\n        {(!isEmpty(props.itemsLeft) || !isEmpty(props.itemsCenter)) &&\n          renderLeftContent('mobile')}\n        {!isEmpty(props.itemsCenter) && renderCenterContent('mobile')}\n        {(!isEmpty(props.itemsRight) || !isEmpty(props.itemsCenter)) &&\n          renderRightContent('mobile')}\n      </div>\n\n      <Drawer\n        placement={props.drawerPlacement}\n        closable={props.drawerClosable}\n        visible={showDrawer}\n        bodyStyle={{ padding: 0 }}\n        className={props.drawerClassName}\n        onClose={toggleDrawer(false)}\n      >\n        {renderDrawerContent('mobile')}\n      </Drawer>\n    </>\n  );\n\n  const renderDesktopMenu = () => (\n    <div className={scss.desktop}>\n      {(!isEmpty(props.itemsLeft) || !isEmpty(props.itemsCenter)) &&\n        renderLeftContent('desktop')}\n      {!isEmpty(props.itemsCenter) && renderCenterContent('desktop')}\n      {(!isEmpty(props.itemsRight) || !isEmpty(props.itemsCenter)) &&\n        renderRightContent('desktop')}\n    </div>\n  );\n\n  useLayoutEffect(() => {\n    setIsDesktop(\n      window.innerWidth >= (props.desktopBreakpoint || EBreakpoints.from1024)\n    );\n  }, []);\n\n  useWindowWidthChange(() => {\n    setIsDesktop(\n      window.innerWidth >= (props.desktopBreakpoint || EBreakpoints.from1024)\n    );\n  });\n\n  if (process.browser) {\n    useElementScroll(window, (scrollY: any) => {\n      if (\n        !isBoolean(props.isScrolled) &&\n        isSameScrollContext(scrollY, isScrolled)\n      ) {\n        setIsScrolled(!!scrollY);\n      }\n    });\n  }\n\n  useEffect(() => {\n    const breakpoint = isDesktop ? 'desktop' : 'mobile';\n\n    if (props.onChangeContext)\n      props.onChangeContext({ breakpoint, isScrolled });\n  }, [isScrolled, isDesktop]);\n\n  useEffect(() => {\n    if (isBoolean(props.isScrolled)) {\n      setIsScrolled(props.isScrolled && true);\n    }\n  }, [props.isScrolled]);\n\n  if (isDesktop) containerClass.push(scss.containerDesktop);\n  if (props.className) containerClass.push(props.className);\n  if (\n    !isEmpty(props.itemsCenter) ||\n    isEmpty(props.itemsLeft) ||\n    isEmpty(props.itemsRight)\n  ) {\n    contentLeftClass.push(scss.full);\n    contentRightClass.push(scss.full);\n  }\n\n  return (\n    <MenuContext.Provider value={[showDrawer, setShowDrawer]}>\n      <nav className={containerClass.join(' ')}>\n        {isDesktop ? renderDesktopMenu() : renderMobileMenu()}\n      </nav>\n    </MenuContext.Provider>\n  );\n}\n\nMenu.defaultProps = {\n  itemsCenter: [],\n  itemsRight: [],\n  itemsLeft: [],\n  itemsDrawer: [],\n  eventCategory: '',\n  drawerPlacement: EPlacement.LEFT,\n  drawerClosable: false,\n} as MenuProps;\n\nexport { Logo, DrawerToggler };\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}